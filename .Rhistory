tables
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
tables <- get_table(cors_weighted)
tables
data("simdat_intensive_longitudinal")
exp_tables <- readRDS("testdata/exp_tables.rds")
exp_matrices <- readRDS("testdata/exp_matrices.rds")
test_that("pearson stats are computed correctly", {
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
tables <- get_table(cors_weighted)
matrices <- summary(cors_weighted)
expect_equal(tables, exp_tables)
expect_equal(matrices, exp_matrices)
})
class(simdat_intensive_longitudinal$participantID)
simdat_intensive_longitudinal$participantID <- as.numeric(simdat_intensive_longitudinal$participantID)
class(simdat_intensive_longitudinal$participantID)
library(wbCorr)
library(wbCorr)
statsby <- prettystatsBy::statsBy(simdat_intensive_longitudinal, 'participantID')
statsby
statsby$pretty
statsby$pretty$combined
statsby$pretty$combined
statsby$pretty$combined[[1]]
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- prettystatsBy::statsBy(simdat_intensive_longitudinal,
group = 'participantID')
statsby$pretty$combined[[1]]
summary(cors_weighted)
summary(cors_weighted, which = 'wb')
statsby$pretty$combined[[1]]
statsby <- prettystatsBy::statsBy(simdat_intensive_longitudinal[1:4],
group = 'participantID')
statsby$pretty$combined[[1]]
statsby <- prettystatsBy::statsBy(simdat_intensive_longitudinal[2:5],
group = 'participantID')
statsby$pretty$combined[[1]]
summary(cors_weighted, which = 'wb')
statsby <- prettystatsBy::statsBy(simdat_intensive_longitudinal[2:5],
group = 'participantID')
statsby <- prettystatsBy::statsBy(simdat_intensive_longitudinal[,2:5],
group = 'participantID')
simdat_intensive_longitudinal
statsby$pretty$combined[[1]]
summary(cors_weighted, which = 'wb')
statsby <- prettystatsBy::statsBy(simdat_intensive_longitudinal,
group = 'participantID')
statsby$pretty$combined[[1]]
summary(cors_weighted, which = 'wb')
statsby$pretty$combined[[1]] == summary(cors_weighted, which = 'wb')
statsby$pretty$combined[[1]]
summary(cors_weighted, which = 'wb')
class(statsby$pretty$combined[[1]])
class(summary(cors_weighted, which = 'wb'))
class(statsby$pretty$combined[[1]])
class(summary(cors_weighted, which = 'wb')[2])
class(summary(cors_weighted, which = 'wb')[[2]])
class(summary(cors_weighted, which = 'wb')[[1]])
class(summary(cors_weighted, which = 'wb')[1])
class(summary(cors_weighted)
})
summary(cors_weighted)
summary(cors_weighted)$merged_wb
class(summary(cors_weighted)$merged_wb)
statsby$pretty$combined[[1]] == summary(cors_weighted)$merged_wb
dim(statsby$pretty$combined[[1]])
dim(summary(cors_weighted)$merged_wb)
statsby$pretty$combined[[1]]
summary(cors_weighted)$merged_wb
statsby$pretty$combined[[1]][2:5]
summary(cors_weighted)$merged_wb
statsby$pretty$combined[[1]][2:5] ==summary(cors_weighted)$merged_wb
round(statsby$pretty$combined[[1]][2:5], 2) == round(summary(cors_weighted)$merged_wb, 2)
statsby$pretty$combined[[1]][2:5] == summary(cors_weighted)$merged_wb
a <- statsby$pretty$combined[[1]][2:5] == summary(cors_weighted)$merged_wb
statsby <- statsby$pretty$combined[[1]][2:5]
wbcorr <- summary(cors_weighted)$merged_wb
wbcorr <- apply(wbcorr,2, function(x) ifelse(is.na(x), "-", x))
wbcorr == statsby
statsby
wbcorr
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- prettystatsBy::statsBy(simdat_intensive_longitudinal,
group = 'participantID')
statsby <- statsby$pretty$combined[[1]][2:5]
statsby
wbcorr <- summary(cors_weighted)$merged_wb
statsby <- apply(statsby,2, function(x) ifelse(x == "-", NA, x))
statsby
wbcorr <- apply(statsby,2, function(x) ifelse(is.na(x), NA, x))
wbcorr
statsby
wbcorr == statsby
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- prettystatsBy::statsBy(simdat_intensive_longitudinal,
group = 'participantID')
statsby <- statsby$pretty$combined[[1]][2:5]
statsby <- apply(statsby,2, function(x) ifelse(x == "-", NA, x))
wbcorr <- summary(cors_weighted)$merged_wb
wbcorr <- apply(statsby,2, function(x) ifelse(is.na(x), NA, x))
wbcorr
statsby
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- prettystatsBy::statsBy(simdat_intensive_longitudinal,
group = 'participantID')
statsby <- statsby$pretty$combined[[1]][2:5]
statsby <- apply(statsby,2, function(x) ifelse(x == "-", NA, x))
wbcorr <- summary(cors_weighted)$merged_wb
wbcorr <- apply(wbcorr,2, function(x) ifelse(is.na(x), NA, x))
wbcorr
statsby
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- prettystatsBy::statsBy(simdat_intensive_longitudinal,
group = 'participantID')
statsby <- statsby$pretty$combined[[1]][2:5]
statsby <- apply(statsby,2, function(x) ifelse(x == "-", "NA", x))
wbcorr
statsby
mat <- as.matrix(wbcorr)
diag(mat) <- "1"
wbcorr <- as.data.frame(mat)
wbcorr
statsby
wbcorr == statsby
sum(wbcorr == statsby)
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- prettystatsBy::statsBy(simdat_intensive_longitudinal,
group = 'participantID')
statsby <- statsby$pretty$combined[[1]][2:5]
statsby <- apply(statsby,2, function(x) ifelse(x == "-", "NA", x))
wbcorr <- summary(cors_weighted)$merged_wb
mat <- as.matrix(wbcorr)
#diag(mat) <- "1"
wbcorr <- as.data.frame(mat)
wbcorr
statsby
sum(wbcorr == statsby)
if(wbcorr == statsby)
wbcorr == statsby
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- prettystatsBy::statsBy(simdat_intensive_longitudinal,
group = 'participantID')
statsby <- statsby$pretty$combined[[1]][2:5]
statsby <- apply(statsby,2, function(x) ifelse(x == "-", "NA", x))
wbcorr <- summary(cors_weighted)$merged_wb
mat <- as.matrix(wbcorr)
#diag(mat) <- "1"
wbcorr <- as.data.frame(mat)
wbcorr
statsby
wbcorr == statsby
sum(wbcorr == statsby)
sum(wbcorr == statsby)
sum_true <- sum(wbcorr == statsby)
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- prettystatsBy::statsBy(simdat_intensive_longitudinal,
group = 'participantID')
wbcorr == statsby
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(prettystatsBy::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
statsby <- statsby$pretty$combined[[1]][2:5]
statsby <- apply(statsby,2, function(x) ifelse(x == "-", "NA", x))
wbcorr <- summary(cors_weighted)$merged_wb
mat <- as.matrix(wbcorr)
diag(mat) <- "1"
wbcorr <- as.data.frame(mat)
wbcorr
statsby
sum_true <- sum(wbcorr == statsby)
wbcorr == statsby
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
statsby
statsby$rbg
statsby$rwg
cors_weighted
cors_weighted@within$correlations
statsby$rwg
statsby$rbg
class(statsby$rbg)
as.data.frame(statsby$rbg)
as.data.frame(statsby$rwg)
class(cors_weighted@within$correlations)
class(as.data.frame(statsby$rwg))
as.data.frame(statsby$rbg)
as.data.frame(statsby$rbg) == cors_weighted@between$correlations
as.data.frame(statsby$rwg) == cors_weighted@within$correlations
as.data.frame(statsby$rbg)
cors_weighted@between$correlations
as.data.frame(statsby$rwg)
cors_weighted@within$correlations
as.data.frame(statsby$rbg)
cors_weighted@between$correlations
as.data.frame(statsby$rwg)
cors_weighted@within$correlations
as.data.frame(statsby$rwg)
cors_weighted@within$correlations
as.data.frame(statsby$rwg) == cors_weighted@within$correlations
round(as.data.frame(statsby$rwg),8) == round(cors_weighted@within$correlations, 8)
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
df_statsby == df_wbcorr
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
df_statsby == df_wbcorr
df_wbcorr <- round(cors_weighted@between$correlations, 8)
df_statsby == df_wbcorr
df_statsby
df_wbcorr
df_statsby == df_wbcorr
expect_equal(df_statsby,df_wbcorr)
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
df_statsby == df_wbcorr
df_statsby == df_wbcorr
compare_within <- df_statsby == df_wbcorr
any(compare_within == FALSE)
any(!is.na(compare_within) & compare_within == FALSE)
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
# between correlation pearson
df_statsby <- round(as.data.frame(statsby$rbg), 80)
df_wbcorr <- round(cors_weighted@between$correlations, 80)
compare_within <- df_statsby == df_wbcorr
any(!is.na(compare_within) & compare_within == FALSE)
!any(!is.na(compare_within) & compare_within == FALSE)
any(!is.na(compare_within) & compare_within == FALSE)
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
# between correlation pearson
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
compare_within <- df_statsby == df_wbcorr
any(!is.na(compare_within) & compare_within == FALSE)
!any(!is.na(compare_within) & compare_within == FALSE)
library(wbCorr)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID',
method = 'spearman'))
# run with spearman.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE,
method = 'spearman')
library(wbCorr)
# within p-values
df_statsby <- round(as.data.frame(statsby$rwg), 8)
df_statsby
# within p-values
df_statsby <- round(as.data.frame(statsby$pwg), 8)
df_statsby
df_wbcorr <- round(cors_weighted@within$p_values, 8)
df_wbcorr
# within p-values
df_statsby <- round(as.data.frame(statsby$pwg), 3)
df_statsby
df_wbcorr <- round(cors_weighted@within$p_values, 3)
df_wbcorr
df_wbcorr - df_statsby
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
compare_within <- df_statsby == df_wbcorr
expect_equal(!any(!is.na(compare_within) & compare_within == FALSE), TRUE)
# within correlation
df_statsby <- round(as.data.frame(statsby$rwg), 8)
df_wbcorr <- round(cors_weighted@within$correlations, 8)
compare_within <- df_statsby == df_wbcorr
expect_equal(!any(!is.na(compare_within) & compare_within == FALSE), TRUE)
# within p-values
df_statsby <- round(as.data.frame(statsby$pwg), 3)
df_statsby
df_wbcorr <- round(cors_weighted@within$p_values, 3)
df_wbcorr - df_statsby
df_wbcorr == df_statsby
diag(df_wbcorr) <- 0
df_wbcorr == df_statsby
wbcorr
cors_weighted
cors_weighted@within$correlations
cors_weighted@within$p_values
get_table(cors_weighted)
get_table(cors_weighted)
summary(cors_weighted)
library(wbCorr)
df_wbcorr == df_statsby
expect_equal(!any(compare_within == FALSE), TRUE)
compare_within <- df_wbcorr == df_statsby
expect_equal(!any(compare_within == FALSE), TRUE)
compare_within <- df_statsby == df_wbcorr
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
source("C:/Users/pascku/OneDrive/scripts/01 R-Packages/wbCorr/tests/testthat/test-wbCorr.R", echo=TRUE)
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
# on my simulated data
data("simdat_intensive_longitudinal")
exp_tables <- readRDS("testdata/exp_tables.rds")
exp_matrices <- readRDS("testdata/exp_matrices.rds")
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
compare_within <- df_statsby == df_wbcorr
compare_within
expect_matrix <- matrix(data = c(TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE),
ncols = 4)
expect_matrix <- matrix(data = c(TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE),
columns = 4)
?matrix
expect_matrix <- matrix(data = c(TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE),
ncol = 4)
expect
expect_matrix
compare_within <- df_statsby == df_wbcorr
compare_within <- df_statsby == df_wbcorr
compare_within
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
cors_weighted
cors_weighted
get_tables(cors_weighted)
summary(cors_weighted)
library(wbCorr)
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
cors_weighted
get_tables(cors_weighted)
summary(cors_weighted)
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
compare_within <- df_statsby == df_wbcorr
expect_equal(!any(!is.na(compare_within) & compare_within == FALSE), TRUE)
# between p-values
df_statsby <- round(as.data.frame(statsby$pbg), 3)
df_statsby
df_wbcorr <- round(cors_weighted@between$p_values, 3)
compare_within <- df_wbcorr == df_statsby
compare_within
expected_matrix <- matrix(data = c(
NA, NA, NA, NA,
NA, TRUE, TRUE, TRUE,
NA, TRUE, TRUE, TRUE,
NA, TRUE, TRUE, TRUE
), ncol = 4)
expected_matrix
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
# function to compare coefficients!
compare <- function(cors_weighted, statsby) {
expected_matrix_within <- matrix(data = c(
TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE
), ncol = 4)
expected_matrix_between <- matrix(data = c(
NA, NA, NA, NA,
NA, TRUE, TRUE, TRUE,
NA, TRUE, TRUE, TRUE,
NA, TRUE, TRUE, TRUE
), ncol = 4)
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
compare_within <- df_statsby == df_wbcorr
expect_equal(compare_within, expected_matrix_between)
# between p-values
df_statsby <- round(as.data.frame(statsby$pbg), 3)
df_statsby
df_wbcorr <- round(cors_weighted@between$p_values, 3)
compare_within <- df_wbcorr == df_statsby
expect_equal(compare_within, expected_matrix_between)
# within correlation
df_statsby <- round(as.data.frame(statsby$rwg), 8)
df_wbcorr <- round(cors_weighted@within$correlations, 8)
compare_within <- df_statsby == df_wbcorr
expect_equal(compare_within, expected_matrix_within)
# within p-values
df_statsby <- round(as.data.frame(statsby$pwg), 3)
df_statsby
df_wbcorr <- round(cors_weighted@within$p_values, 3)
compare_within <- df_wbcorr == df_statsby
expect_equal(compare_within, expected_matrix_within)
}
expected_matrix_within <- matrix(data = c(
TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE
), ncol = 4)
expected_matrix_between <- matrix(data = c(
NA, NA, NA, NA,
NA, TRUE, TRUE, TRUE,
NA, TRUE, TRUE, TRUE,
NA, TRUE, TRUE, TRUE
), ncol = 4)
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
compare_within <- df_statsby == df_wbcorr
compare_within
expected_matrix
compare_within == expect_matrix
compare_within == expect_matrix
sum(expect_matrix)
sum(expected_matrix_within)
sum(expected_matrix_between)
sum(expected_matrix_between, na.rm = TRUE)
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
compare_within <- df_statsby == df_wbcorr
expect_equal(!any(!is.na(compare_within) & compare_within == FALSE), TRUE)
# between p-values
df_statsby <- round(as.data.frame(statsby$pbg), 3)
df_statsby
df_wbcorr <- round(cors_weighted@between$p_values, 3)
compare_within <- df_wbcorr == df_statsby
compare_within
any(compare_within == FALSE), TRUE)
!any(compare_within == FALSE)
library(wbCorr)
library(wbCorr)
library(wbCorr)
library(wbCorr)
wbCorr(iris, iris$Species)
a <- wbCorr(iris, iris$Species)
a
get_tables(a)
summary(a)
