df_wbcorr
# within p-values
df_statsby <- round(as.data.frame(statsby$pwg), 3)
df_statsby
df_wbcorr <- round(cors_weighted@within$p_values, 3)
df_wbcorr
df_wbcorr - df_statsby
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
compare_within <- df_statsby == df_wbcorr
expect_equal(!any(!is.na(compare_within) & compare_within == FALSE), TRUE)
# within correlation
df_statsby <- round(as.data.frame(statsby$rwg), 8)
df_wbcorr <- round(cors_weighted@within$correlations, 8)
compare_within <- df_statsby == df_wbcorr
expect_equal(!any(!is.na(compare_within) & compare_within == FALSE), TRUE)
# within p-values
df_statsby <- round(as.data.frame(statsby$pwg), 3)
df_statsby
df_wbcorr <- round(cors_weighted@within$p_values, 3)
df_wbcorr - df_statsby
df_wbcorr == df_statsby
diag(df_wbcorr) <- 0
df_wbcorr == df_statsby
wbcorr
cors_weighted
cors_weighted@within$correlations
cors_weighted@within$p_values
get_table(cors_weighted)
get_table(cors_weighted)
summary(cors_weighted)
library(wbCorr)
df_wbcorr == df_statsby
expect_equal(!any(compare_within == FALSE), TRUE)
compare_within <- df_wbcorr == df_statsby
expect_equal(!any(compare_within == FALSE), TRUE)
compare_within <- df_statsby == df_wbcorr
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
source("C:/Users/pascku/OneDrive/scripts/01 R-Packages/wbCorr/tests/testthat/test-wbCorr.R", echo=TRUE)
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
# on my simulated data
data("simdat_intensive_longitudinal")
exp_tables <- readRDS("testdata/exp_tables.rds")
exp_matrices <- readRDS("testdata/exp_matrices.rds")
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
compare_within <- df_statsby == df_wbcorr
compare_within
expect_matrix <- matrix(data = c(TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE),
ncols = 4)
expect_matrix <- matrix(data = c(TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE),
columns = 4)
?matrix
expect_matrix <- matrix(data = c(TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE),
ncol = 4)
expect
expect_matrix
compare_within <- df_statsby == df_wbcorr
compare_within <- df_statsby == df_wbcorr
compare_within
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
cors_weighted
cors_weighted
get_tables(cors_weighted)
summary(cors_weighted)
library(wbCorr)
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
cors_weighted
get_tables(cors_weighted)
summary(cors_weighted)
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
compare_within <- df_statsby == df_wbcorr
expect_equal(!any(!is.na(compare_within) & compare_within == FALSE), TRUE)
# between p-values
df_statsby <- round(as.data.frame(statsby$pbg), 3)
df_statsby
df_wbcorr <- round(cors_weighted@between$p_values, 3)
compare_within <- df_wbcorr == df_statsby
compare_within
expected_matrix <- matrix(data = c(
NA, NA, NA, NA,
NA, TRUE, TRUE, TRUE,
NA, TRUE, TRUE, TRUE,
NA, TRUE, TRUE, TRUE
), ncol = 4)
expected_matrix
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
# function to compare coefficients!
compare <- function(cors_weighted, statsby) {
expected_matrix_within <- matrix(data = c(
TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE
), ncol = 4)
expected_matrix_between <- matrix(data = c(
NA, NA, NA, NA,
NA, TRUE, TRUE, TRUE,
NA, TRUE, TRUE, TRUE,
NA, TRUE, TRUE, TRUE
), ncol = 4)
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
compare_within <- df_statsby == df_wbcorr
expect_equal(compare_within, expected_matrix_between)
# between p-values
df_statsby <- round(as.data.frame(statsby$pbg), 3)
df_statsby
df_wbcorr <- round(cors_weighted@between$p_values, 3)
compare_within <- df_wbcorr == df_statsby
expect_equal(compare_within, expected_matrix_between)
# within correlation
df_statsby <- round(as.data.frame(statsby$rwg), 8)
df_wbcorr <- round(cors_weighted@within$correlations, 8)
compare_within <- df_statsby == df_wbcorr
expect_equal(compare_within, expected_matrix_within)
# within p-values
df_statsby <- round(as.data.frame(statsby$pwg), 3)
df_statsby
df_wbcorr <- round(cors_weighted@within$p_values, 3)
compare_within <- df_wbcorr == df_statsby
expect_equal(compare_within, expected_matrix_within)
}
expected_matrix_within <- matrix(data = c(
TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE,
TRUE, TRUE, TRUE, TRUE
), ncol = 4)
expected_matrix_between <- matrix(data = c(
NA, NA, NA, NA,
NA, TRUE, TRUE, TRUE,
NA, TRUE, TRUE, TRUE,
NA, TRUE, TRUE, TRUE
), ncol = 4)
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
compare_within <- df_statsby == df_wbcorr
compare_within
expected_matrix
compare_within == expect_matrix
compare_within == expect_matrix
sum(expect_matrix)
sum(expected_matrix_within)
sum(expected_matrix_between)
sum(expected_matrix_between, na.rm = TRUE)
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
compare_within <- df_statsby == df_wbcorr
expect_equal(!any(!is.na(compare_within) & compare_within == FALSE), TRUE)
# between p-values
df_statsby <- round(as.data.frame(statsby$pbg), 3)
df_statsby
df_wbcorr <- round(cors_weighted@between$p_values, 3)
compare_within <- df_wbcorr == df_statsby
compare_within
any(compare_within == FALSE), TRUE)
!any(compare_within == FALSE)
library(wbCorr)
library(wbCorr)
library(wbCorr)
library(wbCorr)
wbCorr(iris, iris$Species)
a <- wbCorr(iris, iris$Species)
a
get_tables(a)
summary(a)
library('wbCorr')
updata_wbCorr()
update_wbCorr()
library(wbCorr)
update_wbCorr()
packageVersion(pkg = 'wbCorr')
update_wbCorr()
library('wbCorr')
updat('wbCorr')
update_wbCorr()
do you wanna build a snowman?
library(wbCorr)
library(wbCorr)
library(wbCorr)
library(wbCorr)
library(wbCorr)
library(wbCorr)
library(wbCorr)
library(wbCorr)
library(wbCorr)
library(wbCorr)
update_wbCorr()
update_wbCorr()
library(wbCorr)
updat_wbCorr()
update_wbCorr()
library(wbCorr)
library(wbCorr)
library(wbCorr)
source("C:/Users/pascku/OneDrive/scripts/01 R-Packages/wbCorr/tests/testthat/Create_Tests.R", echo=TRUE)
cors <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman-jackknife',
)
get_table(cors)
saveRDS(get_table(cors), file = 'tests/testthat/exp_tables_jackknife.rds')
saveRDS(get_table(cors), file = 'tests/testthat/testdata/exp_tables_jackknife.rds')
summary(cors)
saveRDS(summary(cors), file = 'tests/testthat/testdata/exp_matrices_jeackknife.rds')
source("C:/Users/pascku/OneDrive/scripts/01 R-Packages/wbCorr/tests/testthat/Create_Tests.R", echo=TRUE)
source("C:/Users/pascku/OneDrive/scripts/01 R-Packages/wbCorr/tests/testthat/test-wbCorr.R", echo=TRUE)
source("C:/Users/pascku/OneDrive/scripts/01 R-Packages/wbCorr/tests/testthat/Create_Tests.R", echo=TRUE)
cors <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman-jackknife',
)
cors
cors3 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors3
library(wbCorr)
source("C:/Users/pascku/OneDrive/scripts/01 R-Packages/wbCorr/tests/testthat/Create_Tests.R", echo=TRUE)
cors <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman-jackknife',
)
cors
cors
cors3
cors <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman-jackknife',
)
cors <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman-jackknife',
weighted_between_statistics = FALSE)
cors
cors3
source("C:/Users/pascku/OneDrive/scripts/01 R-Packages/wbCorr/tests/testthat/Create_Tests.R", echo=TRUE)
cors
library(wbCorr)
library(wbCorr)
library(wbCorr)
source("C:/Users/pascku/OneDrive/scripts/01 R-Packages/wbCorr/tests/testthat/Create_Tests.R", echo=TRUE)
cors
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors2
cors1
cors
library(wbCorr)
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors1
cors1
library(wbCorr)
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors1
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors1
cors1
library(wbCorr)
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors1
get_table(cors1)
summary(cors1)
library(wbCorr)
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors1
library(wbCorr)
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors1
cors1
library(wbCorr)
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors1
summary(cors1)
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors1@within$table
library(wbCorr)
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors1
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors1
library(wbCorr)
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors1
library(wbCorr)
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors1
library(wbCorr)
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors1
library(wbCorr)
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors1
a <- names(cors1)
a
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
names(cors1)
library(wbCorr)
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
library(wbCorr)
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors1
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'pearson',
)
cors1
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman-jackknife',
)
cors1
summary(cors1)
library(wbCorr)
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman-jackknife',
)
cors1
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors1
source("C:/Users/pascku/OneDrive/scripts/01 R-Packages/wbCorr/tests/testthat/Create_Tests.R", echo=TRUE)
library(wbCorr)
cors1 <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
method = 'spearman',
)
cors1
a <- readxl::read_excel('C:\\Users\\pascku\\OneDrive\\scripts\\01 R-Packages\\wbCorr\\tests\\testthat\\testdata\\test_data_study.xlsx')
a
head(a)
colnames(a)
str(a)
saveRDS(a, 'tests/testthat/testdata/test_data_real.rds')
a
names(a)
a <- readxl::read_excel('C:\\Users\\pascku\\OneDrive\\scripts\\01 R-Packages\\wbCorr\\tests\\testthat\\testdata\\test-data-real.xlsx')
a
a$CoupleID
wbCorr(a, a$CoupleID)
names(a)
a$CoupleID
wbCorr(a, a$CoupleID)
wbCorr(a, 'CoupleID')
a
saveRDS(a, 'tests/testthat/testdata/test_data_real.rds')
library(wbCorr)
wbCorr(a, a$CoupleID)
class(a$CoupleID)
a$CoupleID
library(wbCorr)
class(a$CoupleID)
wbCorr(a, a$CoupleID)
wbCorr(a, as.factor(a$CoupleID))
wbCorr(a, 'coupleID')
wbCorr(a, 'CoupleID')
length(a$CoupleID)
b <- 'ahha'
length(b)
library(wbCorr)
wbCorr(a, a$CoupleID)
library(wbCorr)
wbCorr(a, a$CoupleID)
wbCorr(a, 'CoupleID')
wbCorr(a, as.factor(a$CoupleID))
wbCorr(a, 'coupleID')
wbCorr(a, 'CoupleID')
library(wbCorr)
a
wbCorr(a, a$CoupleID)
dd <- wbCorr(a, a$CoupleID, method = 'spearman')
dd
cc <- wbCorr(a, a$CoupleID, method = 'spearman-jackknife')
cor(as.factor(1,2,3,2,3), as.factor(22,1,2,3,5), method = 'spearman')
cor(as.factor(c(1,2,3,2,3)), as.factor(c(22,1,2,3,5)), method = 'spearman')
dd <- wbCorr(a, a$CoupleID, method = 'spearman')
library(wbCorr)
dd <- wbCorr(a, a$CoupleID, method = 'spearman')
dd
get_table(dd)
summary(dd)
summary(dd)
summary(dd)[1]
get_table(dd)
get_table(dd)
dd <- wbCorr(a, a$CoupleID, method = 'pearson')
dd <- wbCorr(a, a$CoupleID, method = 'spearman')
dd <- wbCorr(a, a$CoupleID, method = 'spearman-jackknife')
library(wbCorr)
dd <- wbCorr(a, a$CoupleID, method = 'spearman-jackknife')
library(wbCorr)
dd <- wbCorr(a, a$CoupleID, method = 'spearman-jackknife')
dd
dd
dd <- wbCorr(a, a$CoupleID, method = 'spearman')
dd
library('wbCorr')
?wbCorr
library('wbCorr')
