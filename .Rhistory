df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
compare_between <- sum(df_statsby == df_wbcorr, na.rm = TRUE)
print(compare_between)
expect_equal(compare_between, 9)
print(df_statsby)
df_wbcorr
print(df_wbcorr)
print(df_statsby)
library(wbCorr)
library(wbCorr)
data("simdat_intensive_longitudinal")
a <- wbCorr(simdat_intensive_longitudinal, 'participantID')
a
exp_tables <- get_table(a)
exp_matrices <- get_matrices(a)
exp_matrices
saveRDS(exp_tables, "tests/testthat/testdata/exp_tables.rds")
saveRDS(exp_matrices, "tests/testthat/testdata/exp_matrices.rds")
library(wbCorr)
library(wbCorr)
library(wbCorr)
library(wbCorr)
library(wbCorr)
# within CIs
df_statsby <- statsby$ci.wg
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
# within CIs
df_statsby <- statsby$ci.wg
df_statsby
df_wbcorr <- cors_weighted@within$confidence_intervals
df_wbcorr
# within CIs
df_statsby <- statsby$ci.wg
df_statsby
df_statsby[c('lower', 'upper')]
df_statsby[,c('lower', 'upper')]
df_statsby
class(df_statsby)
as.data.frame(df_statsby)
df_statsby
df_statsby[1]
# within CIs
df_statsby <- statsby$ci.wg[1]
df_statsby
# within CIs
df_statsby <- statsby$ci.wg[1]$r.ci
df_statsby
class(df_statsby)
df_statsby
# within CIs
df_statsby <- statsby$ci.wg[1]$r.ci
df_statsby
df_wbcorr <- cors_weighted@within$confidence_intervals
df_wbcorr
library(wbCorr)
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
# within CIs
df_statsby <- statsby$ci.wg[1]$r.ci
df_statsby
df_wbcorr <- cors_weighted@within$confidence_intervals
df_wbcorr
library(wbCorr)
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
# within CIs
df_statsby <- statsby$ci.wg[1]$r.ci
# on my simulated data
data("simdat_intensive_longitudinal")
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
library(wbCorr)
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
library(wbCorr)
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
cors_weighted
library(wbCorr)
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
summary(cors_weighted)
get_tables(cors_weighted)
cors_weighted@within$confidence_intervals
is.different <- difference > 0.01
print(is.different)
# run with pearson.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE)
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID'))
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
compare_between <- sum(df_statsby == df_wbcorr, na.rm = TRUE)
expect_equal(compare_between, 9)
# between p-values
df_statsby <- round(as.data.frame(statsby$pbg), 8)
df_wbcorr <- round(cors_weighted@between$p_values, 8)
difference <- df_statsby - df_wbcorr
is.different <- difference > 0.01
print(is.different)
is.different <- difference < 0.001
print(is.different)
is.different <- difference < 0.002
print(is.different)
is.different <- difference < 0.00001
print(is.different)
# between p-values
df_statsby <- round(as.data.frame(statsby$pbg), 8)
df_wbcorr <- round(cors_weighted@between$p_values, 8)
difference <- df_statsby - df_wbcorr
print(difference)
# run with spearman.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE,
method = 'spearman')
statsby <- suppressWarnings(psych::statsBy(simdat_intensive_longitudinal,
group = 'participantID',
method = 'spearman'))
# between correlation
df_statsby <- round(as.data.frame(statsby$rbg), 8)
df_wbcorr <- round(cors_weighted@between$correlations, 8)
compare_between <- sum(df_statsby == df_wbcorr, na.rm = TRUE)
expect_equal(compare_between, 9)
# between p-values
df_statsby <- round(as.data.frame(statsby$pbg), 8)
df_wbcorr <- round(cors_weighted@between$p_values, 8)
difference <- df_statsby - df_wbcorr
print(difference)
is.different <- difference < 0.001
print(is.different)
df_statsby
df_wbcorr
print(difference)
is.different <- abs(difference) < 0.001
is.different
is.different <- abs(difference) < 0.0001
is.different
is.different <- abs(difference) < 0.001
is.different
# within CIs
df_statsby <- statsby$ci.wg[1]$r.ci
df_statsby
df_wbcorr <- cors_weighted@within$confidence_intervals
df_wbcorr
df_statsby
df_wbcorr
library(wbCorr)
# run with spearman.
cors_weighted <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
weighted_between_statistics = TRUE,
method = 'spearman')
cors_weighted
a <- wbCorr(simdat_intensive_longitudinal, 'participantID')
a
a@within$confidence_intervals
a
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', 'spearman')
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
a
library(wbCorr)
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
r <- 0.684848
num <- 10
stderr <- 1 / sqrt(num - 3)
delta <- 1.96 * stderr
lower = tanh(atanh(r) - delta)
upper <- tanh(atanh(r) + delta)
lower
upper
library(wbCorr)
?wbCorr
0.95/2
1-0.95
2
0.05/2
library(wbCorr)
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
library(wbCorr)
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
library(wbCorr)
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
library(wbCorr)
a
r = 0.3
rs <- r
n <- 90
p <- 0.05
sort(tanh(atanh(rs) + c(-1,1)*sqrt((1+rs^2/2)/(n-3))*qnorm(p = alpha/2)))
alpha <- 0.05
sort(tanh(atanh(rs) + c(-1,1)*sqrt((1+rs^2/2)/(n-3))*qnorm(p = alpha/2)))
library(wbCorr)
library(wbCorr)
library(wbCorr)
library(wbCorr)
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
a
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'pearson')
a
library(wbCorr)
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
a
get_tables(a)
library(wbCorr)
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
a
library(wbCorr)
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
a
library(wbCorr)
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
a
library(wbCorr)
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
a
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'pearson')
a
library(wbCorr)
library(wbCorr)
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'pearson')
a
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
a
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
a
library(wbCorr)
library(wbCorr)
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
warnings()
a
b <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
a
b <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
a
b
library(wbCorr)
b <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
a
b
a <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
a
b
pearson <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'pearson')
library(wbCorr)
data("simdat_intensive_longitudinal")
pearson <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'pearson')
spearman <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
pearson
spearman
jack
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
jack
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
jack
spearman <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
sparman
spearman
jack
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
jackknife <- function(col_i, col_j, alpha_level = 0.95)
jackknife <- function(col_i, col_j, alpha_level = 0.95) {
length_i <- length(col_i)
length_j <- length(col_j)
## Run a basic input validation
if (is.vector(col_i) == FALSE | is.vector(col_i) == FALSE | length_i != length_j) {
stop('col_i and col_j must be vectors of the same length')
}
if (sum(is.na(col_i)) != 0 | sum(is.na(col_j)) != 0) {
stop('missing values are not allowed')
}
correlation_coefficient <- cor(col_i, col_j, method = "spearman")
n_comparisons <- length_i
jackknife_pseudo_values <- as.double()
for(index in 1:n_comparisons) {
jackknife_pseudo_values[index] <- n_comparisons * correlation_coefficient - (n_comparisons - 1) * cor(col_i[-index], col_j[-index],
method = "spearman")
}
variance_estimate <- function(theta) {
1 / n_comparisons * sum((jackknife_pseudo_values - theta)^2)
}
test_statistic <- function(theta) {
n_comparisons * (correlation_coefficient - theta)^2 / variance_estimate(theta) - qchisq(alpha_level, 1) # or 1-alpha_level?
}
lower <- uniroot(test_statistic, interval = c(-1, correlation_coefficient), tol = .1*10^{-10})$root
upper <- uniroot(test_statistic, interval = c(correlation_coefficient, 1), tol = .1*10^{-10})$root
}
a <- c(2,3,NA,2)
a
complete.cases(a, c(1,NA,1,1))
b <- complete.cases(a, c(1,NA,1,1))
c <- a[b]
c
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
jack
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
warnings()
jackknife <- function(col_i, col_j, alpha_level = 0.95) {
length_i <- length(col_i)
length_j <- length(col_j)
## Run a basic input validation
if (is.vector(col_i) == FALSE | is.vector(col_i) == FALSE | length_i != length_j) {
stop('col_i and col_j must be vectors of the same length')
}
if (sum(is.na(col_i)) != 0 | sum(is.na(col_j)) != 0) {
stop('missing values are not allowed')
}
correlation_coefficient <- cor(col_i, col_j, method = "spearman")
n_comparisons <- length_i
jackknife_pseudo_values <- as.double()
for(index in 1:n_comparisons) {
jackknife_pseudo_values[index] <- n_comparisons * correlation_coefficient - (n_comparisons - 1) * cor(col_i[-index], col_j[-index],
method = "spearman")
}
variance_estimate <- function(theta) {
1 / n_comparisons * sum((jackknife_pseudo_values - theta)^2)
}
test_statistic <- function(theta) {
n_comparisons * (correlation_coefficient - theta)^2 / variance_estimate(theta) - qchisq(alpha_level, 1) # or 1-alpha_level?
}
lower <- uniroot(test_statistic, interval = c(-1, correlation_coefficient), tol = .1*10^{-10})$root
upper <- uniroot(test_statistic, interval = c(correlation_coefficient, 1), tol = .1*10^{-10})$root
}
jackknife(c(1,23,2,1,2,2,3,3,2,2,2), c(2,3,3,4,54,5,4,5,5,4,4))
jackknife <- function(col_i, col_j, alpha_level = 0.95) {
length_i <- length(col_i)
length_j <- length(col_j)
## Run a basic input validation
if (is.vector(col_i) == FALSE | is.vector(col_i) == FALSE | length_i != length_j) {
stop('col_i and col_j must be vectors of the same length')
}
if (sum(is.na(col_i)) != 0 | sum(is.na(col_j)) != 0) {
stop('missing values are not allowed')
}
correlation_coefficient <- cor(col_i, col_j, method = "spearman")
n_comparisons <- length_i
jackknife_pseudo_values <- as.double()
for(index in 1:n_comparisons) {
jackknife_pseudo_values[index] <- n_comparisons * correlation_coefficient - (n_comparisons - 1) * cor(col_i[-index], col_j[-index],
method = "spearman")
}
variance_estimate <- function(theta) {
1 / n_comparisons * sum((jackknife_pseudo_values - theta)^2)
}
test_statistic <- function(theta) {
n_comparisons * (correlation_coefficient - theta)^2 / variance_estimate(theta) - qchisq(alpha_level, 1) # or 1-alpha_level?
}
lower <- uniroot(test_statistic, interval = c(-1, correlation_coefficient), tol = .1*10^{-10})$root
upper <- uniroot(test_statistic, interval = c(correlation_coefficient, 1), tol = .1*10^{-10})$root
return(list(lower,upper))
}
simdat_intensive_longitudinal[3:4]
dat <- simdat_intensive_longitudinal[3:4]
jackknife(dat$var1, dat$var2)
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
spearman <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
data("simdat_intensive_longitudinal")
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
jack
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
warnings()
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
jack
library(wbCorr)
View(jack)
data("simdat_intensive_longitudinal")
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
jack
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife')
jack
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman')
jack
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'pearson')
jack
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'pearson', weighted_between_statistics = TRUE)
jack
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman', weighted_between_statistics = TRUE)
jack
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife', weighted_between_statistics = TRUE)
jack
library(wbCorr)
ex <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'pearson', weighted_between_statistics = TRUE)
saveRDS(get_tables(ex), file = 'tests/testthat/testdata/exp_tables.rds')
saveRDS(get_matrix(ex), file = 'tests/testthat/testdata/exp_matrices.rds')
ex
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife', weighted_between_statistics = TRUE)
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife', weighted_between_statistics = TRUE)
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife', weighted_between_statistics = TRUE)
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife', weighted_between_statistics = TRUE)
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife', weighted_between_statistics = TRUE)
library(wbCorr)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife', weighted_between_statistics = TRUE)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife', weighted_between_statistics = TRUE)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife', weighted_between_statistics = TRUE)
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman', weighted_between_statistics = TRUE)
jack
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'pearson', weighted_between_statistics = TRUE)
jack
jack <- wbCorr(simdat_intensive_longitudinal, 'participantID', method = 'spearman-jackknife', weighted_between_statistics = TRUE)
jack
library(wbCorr)
data(sim\)
library(wbCorr)
library(wbCorr)
library(wbCorr)
library(wbCorr)
data("simdat_intensive_longitudinal")
correlations <- wbCorr(simdat_intensive_longitudinal,
cluster = 'participantID',
alpha_level = 0.95,
method = 'spearman',
weighted_between_statistics = FALSE)
correlations
get_tables(correlations)
summary(correlations)
library(wbCorr)
data("simdat_intensive_longitudinal")
correlations <- wbCorr(simdat_intensive_longitudinal, cluster = 'participantID', alpha_level = 0.95, method = 'spearman', weighted_between_statistics = FALSE)
correlations
